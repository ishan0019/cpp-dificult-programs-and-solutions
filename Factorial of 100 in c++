
#include <iostream>

using namespace std;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define DF(i,a,b) for(int i = (int)(a); i >=(int)(b); --i)

void mulA(int *ar,int x) {


   int a2[3],Sum_arr[3][200],j,c=0;

   F(i,0,2)
   {
       a2[i]=0;

       F(j,0,199)
         Sum_arr[i][j]=0;
   }

    j=0;

   while(x)
       {
               a2[j]=x%10;
               x = x/10;
               j++;
       }

int size=0;
while(1){
    if(ar[size]<0)break;
    size++;

}



int count=0,count_sumArr[3],tmpcount;
count_sumArr[0]=count_sumArr[1]=count_sumArr[2]=0;



   F(i,0,j-1){
       c=0;

       tmpcount=i+size-1;
       F(k,i,i+size-1){
            if(ar[k]==-1)ar[k]=1;

            if(tmpcount<i+size-1)ar[k-i]=0;
            Sum_arr[i][k] = ar[k-i]*a2[i]+c;

            c = Sum_arr[i][k]/10;
            Sum_arr[i][k] = Sum_arr[i][k]%10;

            if( c>0 && k==i+size-1 )
            {  size++;
               ar[k+1]=0;
            }

                count_sumArr[i]=k;
        }
       }


 c=0;
   F(k,0,count_sumArr[1]){
       Sum_arr[0][k] += Sum_arr[1][k]+c;

       c = Sum_arr[0][k]/10;
       Sum_arr[0][k] = Sum_arr[0][k]%10;

       if( c>0 && k==count_sumArr[1] )
            {
               count_sumArr[1]++;
            }
    }

    size = count_sumArr[0]>count_sumArr[1]?count_sumArr[0]:count_sumArr[1];

j=0;

   F(k,0,size){
      ar[j] = Sum_arr[0][k];
      j++;
   }

}


void fact(int *a,int n){

  int x=n,j=0;
   while(x)
       {
               a[j]=x%10;
               x = x/10;
               j++;
       }

   n=n-1;

    DF(i,n,2){

    mulA(a,i);

    }
}

int main()
{  int n,a[200],size,j;

     cin>>n;

     F(i,0,199)
      a[i]=-1;

     j=0;

     if(n==0)
       a[0]=1;
     else
       fact(a,n);

     size=0;

     while(1)
     {   if(a[size]==-1)break;
             size++;
     }

     DF(k,size-1,0){
          cout<<a[k];
     }

return 0;
}
